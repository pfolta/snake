#!/bin/bash

# Script to automatically commit and push a release to GitHub after a successful integration build on Travis CI.
# This script uses a repository-specific deploy key and is loosely built on top of
# https://benlimmer.com/2013/12/26/automatically-publish-javadoc-to-gh-pages-with-travis-ci/ and
# https://gist.github.com/domenic/ec8b0fc8ab45f39403dd

# Exit with nonzero exit code if anything fails
set -e

REPO_SLUG="pfolta/snake"

SOURCE_BRANCH="master"
TARGET_BRANCH="gh-pages"

ROOT_DIR=$(pwd)
RELEASE_DIR="$ROOT_DIR/build/app"
DEPLOY_DIR="$ROOT_DIR/build/deploy"

# Save some useful information
REPO=$(git config remote.origin.url)
SSH_REPO=${REPO/https:\/\/github.com\//git@github.com:}

COMMIT_AUTHOR=$(git --no-pager log --format="%an <%ae>" "$TRAVIS_COMMIT"^!)

# Pull requests and commits to other branches should not try to deploy
if [ "$TRAVIS_REPO_SLUG" != "$REPO_SLUG" ] || [ "$TRAVIS_PULL_REQUEST" != "false" ] || [ "$TRAVIS_BRANCH" != "$SOURCE_BRANCH" ]; then
  echo "Pull requests and commits to other branches are not deployed, skipping deployment."
  exit 0
fi

git clone --quiet --branch="$TARGET_BRANCH" "$SSH_REPO" "$DEPLOY_DIR"
cd "$DEPLOY_DIR"

# Clean the $TARGET_BRANCH directory, i.e. remove artifacts from previous build
git rm -rf . > /dev/null
git clean -fxd > /dev/null

# Copy all current build output to deploy directory
cp -a "$RELEASE_DIR/." "$DEPLOY_DIR"

# Stage everything
git add -f .

# Don't proceed if there are no build changes (e.g., this is a README update).
if [ -z "$(git diff --cached --exit-code)" ]; then
  echo "No changes to build output in this commit, skipping deployment."
  exit 0
fi

# Set git committer details
git config user.name "Travis CI"
git config user.email "travis@travis-ci.org"

# Commit the "changes", i.e. the new version.
git commit --author "$COMMIT_AUTHOR" -m "Deployment of build $TRAVIS_COMMIT

Travis Build: #$TRAVIS_BUILD_NUMBER ($TRAVIS_BUILD_ID)

Commit: $TRAVIS_COMMIT
$TRAVIS_COMMIT_MESSAGE"

# Push the commit to $TARGET_BRANCH
git push "$SSH_REPO" "$TARGET_BRANCH"
